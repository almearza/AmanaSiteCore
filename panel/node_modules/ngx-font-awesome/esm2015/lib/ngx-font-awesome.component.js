/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export class NgxFontAwesomeComponent {
    constructor() {
        this.classes = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * getClasses()
     * Function will return Options in class form
     * @return {?}
     */
    getClasses() {
        (this.size) ? this.classes += `fa-${this.size} ` : '';
        (this.rotate) ? this.classes += `fa-rotate-${this.rotate} ` : '';
        (this.flip) ? this.classes += `fa-flip-${this.flip} ` : '';
        (this.customClass) ? this.classes += `${this.customClass} ` : '';
        return this.classes;
    }
}
NgxFontAwesomeComponent.ɵfac = function NgxFontAwesomeComponent_Factory(t) { return new (t || NgxFontAwesomeComponent)(); };
NgxFontAwesomeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxFontAwesomeComponent, selectors: [["ngx-fa"]], inputs: { name: "name", size: "size", animation: "animation", rotate: "rotate", flip: "flip", fixed: "fixed", border: "border", customClass: "customClass" }, decls: 1, vars: 10, consts: [["aria-hidden", "true", 3, "ngClass"]], template: function NgxFontAwesomeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "i", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("fa fa-", ctx.name, "");
        ɵngcc0.ɵɵclassProp("fa-fw", ctx.fixed)("fa-border", ctx.border)("fa-spin", ctx.animation);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
NgxFontAwesomeComponent.ctorParameters = () => [];
NgxFontAwesomeComponent.propDecorators = {
    name: [{ type: Input }],
    size: [{ type: Input }],
    animation: [{ type: Input }],
    rotate: [{ type: Input }],
    flip: [{ type: Input }],
    fixed: [{ type: Input }],
    border: [{ type: Input }],
    customClass: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFontAwesomeComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-fa',
                template: `
    <i class="fa fa-{{ name }}"
      [ngClass]="getClasses()"
      [class.fa-fw]="fixed"
      [class.fa-border]="border"
      [class.fa-spin]="animation"
      aria-hidden="true">
    </i>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { name: [{
            type: Input
        }], size: [{
            type: Input
        }], animation: [{
            type: Input
        }], rotate: [{
            type: Input
        }], flip: [{
            type: Input
        }], fixed: [{
            type: Input
        }], border: [{
            type: Input
        }], customClass: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.name;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.size;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.animation;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.rotate;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.flip;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.fixed;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.border;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.customClass;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.classes;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvbnQtYXdlc29tZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5neC1mb250LWF3ZXNvbWUvbGliL25neC1mb250LWF3ZXNvbWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBZ0JsRixNQUFNLE9BQU8sdUJBQXVCO0FBQUcsSUFVckM7QUFBZ0IsUUFEaEIsWUFBTyxHQUFXLEVBQUUsQ0FBQztBQUN2QixJQUFrQixDQUFDO0FBQ25CO0FBQ087QUFJUDtBQUFRLElBSk4sUUFBUTtBQUNWLElBQUUsQ0FBQztBQUNIO0FBRUM7QUFDRTtBQUNFO0FBRUo7QUFBUSxJQURQLFVBQVU7QUFDWixRQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLE1BQU0sSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDMUQsUUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxhQUFhLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ3JFLFFBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksV0FBVyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUMvRCxRQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDckUsUUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDeEIsSUFBRSxDQUFDO0FBQ0g7bURBeENDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsUUFBUSxrQkFDbEI7TUFBUSxFQUFFLHNNQVFULGtCQUVELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2hEOzs7Ozs7K0VBQ0c7QUFBQztBQUFtQjtBQUNOO0FBRVAsbUJBRlIsS0FBSztBQUFLLG1CQUNWLEtBQUs7QUFBSyx3QkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLG1CQUNWLEtBQUs7QUFBSyxvQkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLDBCQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQztBQUFhO0FBQ1gsSUFSZix1Q0FBc0I7QUFDeEI7QUFBcUIsSUFBbkIsdUNBQXNCO0FBQ3hCO0FBQXFCLElBQW5CLDRDQUE0QjtBQUM5QjtBQUFxQixJQUFuQix5Q0FBd0I7QUFDMUI7QUFBcUIsSUFBbkIsdUNBQXNCO0FBQ3hCO0FBQXFCLElBQW5CLHdDQUF3QjtBQUMxQjtBQUFxQixJQUFuQix5Q0FBeUI7QUFDM0I7QUFBcUIsSUFBbkIsOENBQTZCO0FBQy9CO0FBQXFCLElBQW5CLDBDQUFxQjs7QUF6QkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBZ0JBLEFBQUEsQUFBQSxBQUFBLEFBVUEsQUFEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBTUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBdkNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBUUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUEEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtZmEnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpIGNsYXNzPVwiZmEgZmEte3sgbmFtZSB9fVwiXG4gICAgICBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIlxuICAgICAgW2NsYXNzLmZhLWZ3XT1cImZpeGVkXCJcbiAgICAgIFtjbGFzcy5mYS1ib3JkZXJdPVwiYm9yZGVyXCJcbiAgICAgIFtjbGFzcy5mYS1zcGluXT1cImFuaW1hdGlvblwiXG4gICAgICBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8L2k+XG4gIGAsXG4gIHN0eWxlczogW10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE5neEZvbnRBd2Vzb21lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFuaW1hdGlvbjogYm9vbGVhbjtcbiAgQElucHV0KCkgcm90YXRlOiBudW1iZXI7XG4gIEBJbnB1dCgpIGZsaXA6IHN0cmluZztcbiAgQElucHV0KCkgZml4ZWQ6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGJvcmRlcjogYm9vbGVhbjtcbiAgQElucHV0KCkgY3VzdG9tQ2xhc3M6IHN0cmluZztcbiAgY2xhc3Nlczogc3RyaW5nID0gJyc7XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICAvKipcbiAgICogZ2V0Q2xhc3NlcygpXG4gICAqIEZ1bmN0aW9uIHdpbGwgcmV0dXJuIE9wdGlvbnMgaW4gY2xhc3MgZm9ybVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpIHtcbiAgICAodGhpcy5zaXplKSA/IHRoaXMuY2xhc3NlcyArPSBgZmEtJHt0aGlzLnNpemV9IGAgOiAnJztcbiAgICAodGhpcy5yb3RhdGUpID8gdGhpcy5jbGFzc2VzICs9IGBmYS1yb3RhdGUtJHt0aGlzLnJvdGF0ZX0gYCA6ICcnO1xuICAgICh0aGlzLmZsaXApID8gdGhpcy5jbGFzc2VzICs9IGBmYS1mbGlwLSR7dGhpcy5mbGlwfSBgIDogJyc7XG4gICAgKHRoaXMuY3VzdG9tQ2xhc3MpID8gdGhpcy5jbGFzc2VzICs9IGAke3RoaXMuY3VzdG9tQ2xhc3N9IGAgOiAnJztcbiAgICByZXR1cm4gdGhpcy5jbGFzc2VzO1xuICB9XG59XG4iXX0=