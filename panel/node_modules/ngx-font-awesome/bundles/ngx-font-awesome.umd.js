(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-font-awesome', ['@angular/core','@angular/common','exports', '@angular/core', '@angular/common'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global['ngx-font-awesome'] = {}, global.ng.core, global.ng.common));
}(this, function (ɵngcc0,ɵngcc1,exports, core, common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxFontAwesomeComponent = /** @class */ (function () {
        function NgxFontAwesomeComponent() {
            this.classes = '';
        }
        /**
         * @return {?}
         */
        NgxFontAwesomeComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
        };
        /**
         * getClasses()
         * Function will return Options in class form
         */
        /**
         * getClasses()
         * Function will return Options in class form
         * @return {?}
         */
        NgxFontAwesomeComponent.prototype.getClasses = /**
         * getClasses()
         * Function will return Options in class form
         * @return {?}
         */
        function () {
            (this.size) ? this.classes += "fa-" + this.size + " " : '';
            (this.rotate) ? this.classes += "fa-rotate-" + this.rotate + " " : '';
            (this.flip) ? this.classes += "fa-flip-" + this.flip + " " : '';
            (this.customClass) ? this.classes += this.customClass + " " : '';
            return this.classes;
        };
        /** @nocollapse */
        NgxFontAwesomeComponent.ctorParameters = function () { return []; };
        NgxFontAwesomeComponent.propDecorators = {
            name: [{ type: core.Input }],
            size: [{ type: core.Input }],
            animation: [{ type: core.Input }],
            rotate: [{ type: core.Input }],
            flip: [{ type: core.Input }],
            fixed: [{ type: core.Input }],
            border: [{ type: core.Input }],
            customClass: [{ type: core.Input }]
        };
NgxFontAwesomeComponent.ɵfac = function NgxFontAwesomeComponent_Factory(t) { return new (t || NgxFontAwesomeComponent)(); };
NgxFontAwesomeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxFontAwesomeComponent, selectors: [["ngx-fa"]], inputs: { name: "name", size: "size", animation: "animation", rotate: "rotate", flip: "flip", fixed: "fixed", border: "border", customClass: "customClass" }, decls: 1, vars: 10, consts: [["aria-hidden", "true", 3, "ngClass"]], template: function NgxFontAwesomeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "i", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("fa fa-", ctx.name, "");
        ɵngcc0.ɵɵclassProp("fa-fw", ctx.fixed)("fa-border", ctx.border)("fa-spin", ctx.animation);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFontAwesomeComponent, [{
        type: core.Component,
        args: [{
                selector: 'ngx-fa',
                template: "\n    <i class=\"fa fa-{{ name }}\"\n      [ngClass]=\"getClasses()\"\n      [class.fa-fw]=\"fixed\"\n      [class.fa-border]=\"border\"\n      [class.fa-spin]=\"animation\"\n      aria-hidden=\"true\">\n    </i>\n  ",
                changeDetection: core.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { name: [{
            type: core.Input
        }], size: [{
            type: core.Input
        }], animation: [{
            type: core.Input
        }], rotate: [{
            type: core.Input
        }], flip: [{
            type: core.Input
        }], fixed: [{
            type: core.Input
        }], border: [{
            type: core.Input
        }], customClass: [{
            type: core.Input
        }] }); })();
        return NgxFontAwesomeComponent;
    }());
    if (false) {
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.name;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.size;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.animation;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.rotate;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.flip;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.fixed;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.border;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.customClass;
        /** @type {?} */
        NgxFontAwesomeComponent.prototype.classes;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxFontAwesomeModule = /** @class */ (function () {
        function NgxFontAwesomeModule() {
        }
NgxFontAwesomeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxFontAwesomeModule });
NgxFontAwesomeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxFontAwesomeModule_Factory(t) { return new (t || NgxFontAwesomeModule)(); }, imports: [[
            common.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxFontAwesomeModule, { declarations: [NgxFontAwesomeComponent], imports: [ɵngcc1.CommonModule], exports: [NgxFontAwesomeComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFontAwesomeModule, [{
        type: core.NgModule,
        args: [{
                declarations: [NgxFontAwesomeComponent],
                imports: [
                    common.CommonModule
                ],
                exports: [NgxFontAwesomeComponent]
            }]
    }], function () { return []; }, null); })();
        return NgxFontAwesomeModule;
    }());

    exports.NgxFontAwesomeModule = NgxFontAwesomeModule;
    exports.ɵa = NgxFontAwesomeComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=ngx-font-awesome.umd.js.map